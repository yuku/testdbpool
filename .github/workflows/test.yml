name: Test

on:
  push:
    branches: [ main, impl3 ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    strategy:
      matrix:
        go-version: ['1.22', '1.23']
        postgres-version: ['14', '15', '16']
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
      run: |
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Run linter
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  # Separate job for short tests without database
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    strategy:
      matrix:
        go-version: ['1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run unit tests
      run: go test -v -short ./...