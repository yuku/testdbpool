name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres-version: ['13', '14', '15', '16']
        test-directory: ['.', './examples/sqlc', './examples/pgxpool']
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: ${{ matrix.test-directory }}
      run: go mod download

    - name: Run tests
      working-directory: ${{ matrix.test-directory }}
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: postgres
        PGSSLMODE: disable
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
      run: |
        if [ "${{ matrix.test-directory }}" = "." ]; then
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        else
          go test -v -race ./...
        fi

    - name: Upload coverage to Codecov
      if: matrix.test-directory == '.' && matrix.postgres-version == '16'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.txt
        flags: unittests
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m